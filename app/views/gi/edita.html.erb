<div id="d-titulo">
  &nbsp;&nbsp;<%= @titulo.html_safe %>
  &nbsp;&nbsp;&nbsp;

  <button title="Configuración" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="$('#config').dialog('open')">
    <i class="gi-img-button material-icons">settings</i>
  </button>
  <button title="Rupturas" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="$('#rupturas').dialog('open')">
    <i class="gi-img-button material-icons">storage</i>
  </button>
  <button title="Límites" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="$('#lim').dialog('open')">
    <i class="gi-img-button material-icons">code</i>
  </button>
  <button title="Estilos" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="$('#estilos').dialog('open')">
    <i class="gi-img-button material-icons">color_lens</i>
  </button>
  <button title="Fórmulas" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="$('#formulas').dialog('open')">
    <i class="gi-img-button material-icons">functions</i>
  </button>
  &nbsp;&nbsp;&nbsp;
  <button title="Select" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="$('#select').dialog('open')">
    <span style="font-size: 18px">S</span>
  </button>
  <button title="Where" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="$('#where').dialog('open')">
    <span style="font-size: 18px">W</span>
  </button>
  <button title="Order" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="$('#order').dialog('open')">
    <span style="font-size: 18px">O</span>
  </button>
  <button title="Group" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="$('#group').dialog('open')">
    <span style="font-size: 18px">G</span>
  </button>
  <button title="Having" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="$('#having').dialog('open')">
    <span style="font-size: 18px">H</span>
  </button>
  &nbsp;&nbsp;&nbsp;
  <button title="Grabar" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="$('#grabar').dialog('open')">
    <i class="gi-img-button material-icons">save</i>
  </button>
  <button title="Imprimir" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 28px;width: 28px;min-width: 28px;" onclick="giPrint()">
    <i class="gi-img-button material-icons">print</i>
  </button>
</div>

<div id="tree_campos"> </div>

<div id="prop-celdas" style="display: none; padding: 0">
  <table style="width: 100%">
    <tr><td class="subtit"><label for="campo">Campo:</label></td> <td><textarea rows="1" id="campo" class="i_cmp admite_campo"></textarea></td></tr>
    <tr><td class="subtit"><label for="estilo">Estilo:</label></td> <td><select id="estilo" class="i_cmp"></select></td></tr>
    <tr>
      <td class="subtit"><label for="tipo">Tipo:</label></td>
      <td>
        <select id="tipo" class="i_cmp">
          <option value="">Auto</option>
          <option value="string">Cadena</option>
          <option value="number">Número</option>
          <option value="date">Fecha</option>
        </select>
      </td>
    </tr>
    <tr><td class="subtit"><label for="alias">Alias:</label></td> <td><input id="alias" class="i_cmp"/></td></tr>
  </table>
</div>

<div id="rupturas" style="display: none; padding: 0">
  <table id="t_rup" style="width: 100%">
    <tr><td class="subtit">Campo</td> <td class="subtit" style="text-align: center">Salto</td></tr>
  </table>
</div>

<div id="bandas" style="display: none;">
  <div id="tool_ban" class="ui-widget-header ui-corner-all">
    <button id="swp_w" class="b_banda">Mover a la izquierda</button>
    <button id="swp_e" class="b_banda">Mover a la derecha</button>
    <button id="swp_n" class="b_banda">Mover arriba</button>
    <button id="swp_s" class="b_banda">Mover abajo fila</button>
    <button id="add_cw" class="b_banda">Añadir columna a la izquierda</button>
    <button id="add_ce" class="b_banda">Añadir columna a la derecha</button>
    <button id="add_rn" class="b_banda">Añadir fila por arriba</button>
    <button id="add_rs" class="b_banda">Añadir fila por abajo</button>
    <button id="del_r" class="b_banda">Borrar fila</button>
    <button id="del_c" class="b_banda">Borrar columna</button>
    <button id="add_rup" title="Añadir bandas de ruptura">R+</button>
    <button id="del_rup" title="Borrar bandas de ruptura "class="b_banda">R-</button>
  </div>
  <p class="tit_band tit ui-widget-header ui-corner-all"> Cabecera </p>
  <table id="t_cab" class="t_banda">
    <tr>
      <td class="cell-new">&nbsp;</td>
      <td class="cell-new">&nbsp;</td>
    </tr>
  </table>
  <p id="tt_det" class="tit_band tit ui-widget-header ui-corner-all"> Detalle </p>
  <table id="t_det" class="t_banda">
    <tr>
      <td class="cell-new">&nbsp;</td>
      <td class="cell-new">&nbsp;</td>
    </tr>
  </table>
  <p class="tit_band tit ui-widget-header ui-corner-all"> Pie </p>
  <table id="t_pie" class="t_banda">
    <tr>
      <td class="cell-new">&nbsp;</td>
      <td class="cell-new">&nbsp;</td>
    </tr>
  </table>
</div>

<div id="config" title="Configuración" style="padding: 0;display: none">
  <table id="t_config">
    <col width="150px">
    <tr><td class="subtit"><label for="filt_emej">Filtrar empresa:</label></td> <td><input type="checkbox" checked id="filt_emej" class="i_cmp" style="width: auto"/></td></tr>
    <tr><td class="tit" colspan="2">ASPECTO</td></tr>
    <tr><td class="subtit"><label for="npagw">Nº Páginas ancho:</label></td> <td><input type="number" id="npagw" class="i_cmp"/></td></tr>
    <tr><td class="subtit"><label for="npagh">Nº Páginas alto:</label></td> <td><input id="npagh" class="i_cmp"/></td></tr>
    <tr><td class="subtit"><label for="pingrid">Pintar Rejilla:</label></td> <td><input type="checkbox" id="pingrid" class="i_cmp" style="width: auto"/></td></tr>
    <tr><td class="subtit"><label for="tit_i">Título izquierda:</label></td> <td><input id="tit_i" class="i_cmp"/></td></tr>
    <tr><td class="subtit"><label for="tit_c">Título centro:</label></td> <td><input id="tit_c" class="i_cmp"/></td></tr>
    <tr><td class="subtit"><label for="tit_d">Título derecha:</label></td> <td><input id="tit_d" class="i_cmp"/></td></tr>
    <tr><td class="subtit"><label for="page_setup">Config. Página:</label></td> <td><textarea id="page_setup" class="i_cmp"></textarea></td></tr>
    <tr><td class="subtit"><label for="col_widths">Ancho columnas:</label></td> <td><input id="col_widths" class="i_cmp"/></td></tr>
    <tr><td class="subtit"><label for="page_margins">Márgenes:</label></td> <td><textarea id="page_margins" class="i_cmp"></textarea></td></tr>
  </table>
</div>

<div id="lim" title="Límites" style="padding: 0;display: none">
  <div class="ui-widget-header ui-corner-all">
    <button id="b_add_lim">Añadir límite</button>
    <button id="b_del_lim">Borrar límite</button>
  </div>

  <table id="t_lim">
    <col width="90px">
    <tr class="subtit">
      <td class="subtit">Alias</td>
      <td class="subtit">Propiedades</td>
    </tr>
  </table>
</div>

<div id="asist_lim" title="Asistente de límites" style="padding: 0;display: none">
  <table id="t_asist_lim">
    <col width="130">
    <tr><td class="subtit"><label for="asist_lim_ref">Campo referencia:</label></td> <td><input id="asist_lim_ref" class="i_cmp admite_campo"/></td></tr>
    <tr><td class="subtit"><label for="asist_lim_alias">Alias:</label></td> <td><input id="asist_lim_alias" class="i_cmp"/></td></tr>
    <tr><td class="subtit"><label for="asist_lim_label">Generar etiqueta:</label></td> <td><input id="asist_lim_label" type="checkbox" checked/></td></tr>
    <tr>
      <td class="subtit"><label for="asist_lim_cond">Tipo condición:</label></td>
      <td><select id="asist_lim_cond" class='i_cmp'>
        <option value='eq'>Igual</option>
        <option value='dh'>Desde/Hasta</option>
        <option value='ge'>Desde</option>
        <option value='le'>Hasta</option>
        <option value='lk'>Contenido</option>
      </select></td>
    </tr>
    <tr>
      <td class="subtit"><label for="asist_lim_wh">Cláusula:</label></td>
      <td><select id="asist_lim_wh" class='i_cmp'>
        <option value='wh'>Where</option>
        <option value='ha'>Having</option>
        <option value='no'>Ninguna</option>
      </select></td>
    </tr>
  </table>
</div>

<div id="estilos" title="Estilos" style="padding: 0;display: none">
  <div class="ui-widget-header ui-corner-all">
    <button id="b_add_estilo">Añadir estilo</button>
    <button id="b_del_estilo">Borrar estilo</button>
  </div>

  <table id="t_estilos">
    <col width="10%">
    <col width="90%">
    <tr class="subtit">
      <td class="subtit">Nombre</td>
      <td class="subtit">Propiedades</td>
    </tr>
  </table>
</div>

<div id="formulas" title="Fórmulas" style="padding: 0; display: none">
  <div class="ui-widget-header ui-corner-all">
    <button id="b_add_formula">Añadir fórmula</button>
    <button id="b_del_formula">Borrar fórmula</button>
  </div>

  <table id="t_formulas">
    <col width="40px">
    <tr class="subtit">
      <td class="subtit">Alias</td>
      <td class="subtit">Fórmula</td>
    </tr>
  </table>
</div>

<div id="select" title="Select" style="padding: 0; display: none">
  <div class="ui-widget-header ui-corner-all">
    <button id="b_add_select">Añadir columna</button>
    <button id="b_del_select">Borrar columna</button>
  </div>

  <table id="t_select">
    <col width="40px">
    <tr class="subtit">
      <td class="subtit">Alias</td>
      <td class="subtit">Columna</td>
    </tr>
  </table>
</div>

<div id="where" title="Where" style="padding: 0; display: none">
  <div class="ui-widget-header ui-corner-all">
    <button id="b_add_where">Añadir condición</button>
    <button id="b_del_where">Borrar condición</button>
  </div>

  <table id="t_where">
    <col width="70px">
    <tr class="subtit">
      <td class="subtit">Referencia</td>
      <td class="subtit">Condición</td>
    </tr>
  </table>
</div>

<div id="order" title="Order" style="padding: 0; display: none">
  <textarea rows="4" class="i_cmp admite_campo"></textarea>
</div>

<div id="group" title="Group" style="padding: 0; display: none">
  <textarea rows="4" class="i_cmp admite_campo"></textarea>
</div>

<div id="having" title="Having" style="padding: 0; display: none">
  <div class="ui-widget-header ui-corner-all">
    <button id="b_add_having">Añadir condición</button>
    <button id="b_del_having">Borrar condición</button>
  </div>

  <table id="t_having">
    <col width="70px">
    <tr class="subtit">
      <td class="subtit">Referencia</td>
      <td class="subtit">Condición</td>
    </tr>
  </table>
</div>

<div id="grabar" title="Grabar" style="display: none">
  <label for="file_name">Archivo:</label><input id="filename" class="i_cmp"/>
</div>

<!--
<div id="abrir" style="display: none">
  <iframe id="f_abrir"></iframe>
</div>
-->


<style>
  #d-titulo {
    background-color: #673AB7;
    color: #ffffff;
    height: 40px;
    line-height: 40px;
    font-size: large;
    margin-bottom: 1px;
  }

  .gi-img-button {
    font-size: 20px;
  }

  #tree_campos {
    float: left;
    overflow-x: hidden;
    overflow-y: auto;
    vertical-align: top;
    background-color: #d3d3d3;
    padding-left: 3px;
    padding-right: 5px;
    padding-top: 3px;
    padding-bottom: 10px;
  }
  .centro {text-align: center;}
  .subtit {
    background-color: #f0f0f0;
  }
  .tit {
    background-color: #d3d3d3;
    text-align: center;
    margin-top: 1px;
    margin-bottom: 1px;
  }

  #bandas {
    position: absolute;
    width: 500px;
  }

  .t_banda, #t_estilos, #t_lim, #t_config, #t_formulas, #t_select, #t_where, #t_having, #t_asist_lim {
    width: 100%;
    table-layout: fixed;
  }
  .t_banda td {
    overflow-x: hidden;
  }
  table, td {
    border: 1px solid grey;
    border-collapse: collapse;
  }
  .i_cmp {
    border-width: 0;
    font: normal normal normal normal 1.1em/normal Roboto, Arial, Helvetica, sans-serif;
    width: 100%;
  }

  /*
  #f_abrir {
    width: 100%;
  }
  */

  input, textarea {
    outline: none;
  }

  textarea {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }

  .no-close .ui-dialog-titlebar-close {
    display: none;
  }
</style>

<script>
  var modelo = '<%= @modelo %>';
  var tabla, fileName, abrirInforme = false;

  function giPrint() {
    abrirInforme = true;
    if (fileName == undefined)
      $("#grabar").dialog("open");
    else
      grabaFic(fileName);
  }

  function genArrayBan(rows) {
    ar = [];
    rows.each(function() {
      r = [];
      $(this).children().each(function() {
        r.push($(this).data("prop"));
      });
      ar.push(r);
    });

    return(ar);
  }

  function grabaFic(file) {
    var data = {modelo: modelo};
    var th, cl, h, trup;
    $("#config :input").each(function() {
      th =$(this);
      if (th.attr("type") == "checkbox")
        data[th.attr("id")] = th.is(':checked');
      else
        data[th.attr("id")] = th.val();
    });

    data.formulas = {};
    $("#t_formulas textarea").each(function() {
      var el = $(this);
      data.formulas[el.parent().prev().text()] = el.val();
    });

    data.select = {};
    $("#t_select textarea").each(function() {
      var el = $(this);
      data.select[el.parent().prev().text()] = el.val();
    });

    data.where = {};
    $("#t_where textarea").each(function() {
      var el = $(this);
      data.where[el.parent().prev().text()] = el.val();
    });

    data.order = $("#order textarea").val();
    data.group = $("#group textarea").val();

    data.having = {};
    $("#t_having textarea").each(function() {
      var el = $(this);
      data.having[el.parent().prev().text()] = el.val();
    });

    data.cab = genArrayBan($("#t_cab tr"));
    data.det = genArrayBan($("#t_det tr"));
    data.pie = genArrayBan($("#t_pie tr"));
    data.rup = [];
    $("#t_rup [class^=rup]").each(function(){
      cl = $(this).attr("class");
      h = {};
      h.campo = $(this).find("textarea").val();
      h.salto = $(this).find("input").is(":checked");
      trup = $("table." + cl);
      h.cab = genArrayBan(trup.first().find("tr"));
      h.pie = genArrayBan(trup.last().find("tr"));
      data.rup.push(h);
    });

    data.lim = {};
    $("#t_lim textarea").each(function() {
      var el = $(this);
      data.lim[el.parent().prev().text()] = el.val();
    });

    data['style'] = {};
    $("#estilos input").each(function() {
      var e = $(this);
      data['style'][e.val()] = e.parent().next().children().val();
    });

    var ow = (file == fileName) ? 's' : 'n';
    $.post('/gi/graba_fic', {file: file, ow: ow, data: JSON.stringify(data)}, function(d){
      if (d == 's') {
        if (abrirInforme) {
          window.open('/gi/edit/' + file);
          /*
          $("#f_abrir").attr("src", '/gi/edit/' + file);
          $("#abrir").dialog("open");
          */
          abrirInforme = false;
        } else {
          fileName = file;
        }
        $("#grabar").dialog("close");
      } else {
        if (window.confirm('Ya existe el fichero. ¿Sobreescribir?')) {
          fileName = file;
          grabaFic(file);
          $("#grabar").dialog("close");
        }
      }
    });
  }

  $("#filename").keypress(function (e) {
    if (e.which == 13) {
      file = $(this).val();
      if (file.trim() == "") {
        alert('Nombre de archivo no válido');
        return;
      }

      grabaFic(file);
    }
  });

  // Diálogo de configuración

  $("#config").dialog({
    autoOpen: false,
    width: 600,
    show: {effect: "blind", duration: 300},
    hide: {effect: "explode", duration: 300},
    resizeStop: function() {$(this).dialog('option', 'height', 'auto')}
  });

  // Diálogo de límites

  $("#lim").dialog({
    autoOpen: false,
    width: 650,
    position: {my: "left top", at: "left+90 bottom+120", of: "#bandas"},
    show: {effect: "blind", duration: 300},
    hide: {effect: "explode", duration: 300},
    resizeStop: function() {$(this).dialog('option', 'height', 'auto')}
  });
  $("#t_lim tbody").sortable({items: "tr:not(.subtit)"});
  $("#b_add_lim").button({icons: {primary: "ui-icon-plus"}, text: false}).click(function(){addLim();});
  $("#b_del_lim").button({icons: {primary: "ui-icon-minus"}, text: false}).click(function(){delLim();});

  $("#asist_lim").dialog({
    autoOpen: false,
    width: 500,
    position: {my: "left top", at: "left+90 top+120", of: "#bandas"},
    resizable: false,
    show: {effect: "blind", duration: 300},
    hide: {effect: "explode", duration: 300},
    buttons: {
      "Generar": function() {
        var ali = $("#asist_lim_alias").val();
        if (ali == '') {
          alert('Es obligatorio especificar un alias');
          $("#asist_lim_alias").focus();
          return;
        }
        var rep = false;
        $(".alias_lim").each(function() {
          if ($(this).text() == ali) {
            alert('Alias repetido');
            rep = true;
            return;
          }
        });
        if (rep) {
          $("#asist_lim_alias").focus();
          return;
        }

        $(this).dialog("close");
        asistLim();
      }
    }
  });

  $("#asist_lim_ref").on("keydown", function(e) {if (e.keyCode != 9) e.preventDefault();}).bind("contextmenu", function(e) {return false;});

  function genCoal(ali, ty, lim) {
    switch(ty) {
      case 'integer':
      case 'decimal':
        return("COALESCE(:" + ali + "," + (lim == 'g' ? "-9999999999" : "9999999999") + ")");
      default:
        return("COALESCE(:" + ali + "," + (lim == 'g' ? "''" : "'zzzzzzz'") + ")");
    }
  }
  function generaLim(ali, node, prop, cond) {
    var label, wh;

    if (node.id) {

    } else if (node.pk) {
      ali += '_id';
      var ref = node.parent.id;
      if (!ref) ref = modelo;
      prop += ", ref: '" + ref + "', cmph: '" + node.name + "'";
      switch(cond) {
        case 'eq':
          label = node.name;
          wh = $("#asist_lim_ref").val() + ' = ' + ':' + ali;
          break;
        case 'ge':
          label = 'Desde ' + node.name;
          wh = $("#asist_lim_ref").val() + ' >= ' + genCoal(ali, node.type, 'g');
          break;
        case 'le':
          label = 'Hasta ' + node.name;
          wh = $("#asist_lim_ref").val() + ' <= ' + genCoal(ali, node.type, 'l');
          break;
      }
    } else {
      prop += ", type: :" + node.type;
      switch(cond) {
        case 'eq':
          label = node.name;
          wh = $("#asist_lim_ref").val() + ' = ' + ':' + ali;
          break;
        case 'ge':
          label = 'Desde ' + node.name;
          wh = $("#asist_lim_ref").val() + ' >= ' + ':' + ali;
          break;
        case 'le':
          label = 'Hasta ' + node.name;
          wh = $("#asist_lim_ref").val() + ' <= ' + ':' + ali;
          break;
      }
    }

    if ($("#asist_lim_label").is(":checked")) prop += ", label: '" + label + "'";
    if ($("#asist_lim_wh").val() == 'wh') {
      addWhere(ali, wh);
      $("#where").dialog("open");
    } else if ($("#asist_lim_wh").val() == 'ha') {
      addHaving(ali, wh);
      $("#having").dialog("open");
    }

    addLim(ali, prop);
  }

  function asistLim() {
    var prop = "tab: 'pre', gcols: 3";

    var ali = $("#asist_lim_alias").val();
    var node = $("#asist_lim_ref").data("cmp");
    if (node) {
      if (node.manti && !node.pk) prop += ", manti: " + node.manti;
      if (node.decim) prop += ", decim: " + node.decim;

      if (node.id) {

      } else if (node.pk) {

      } else {

      }

      var cond = $("#asist_lim_cond").val();
      if (cond == 'dh') {
        generaLim('d_' + ali, node, prop, 'ge');
        generaLim('h_' + ali, node, prop, 'le');
      } else
        generaLim(ali, node, prop, cond);
    } else {
      addLim(ali, prop);
    }
  }

  var lastLim = 0;
  function addLim(name, val) {
    if (lastCmp && lastCmp.is("#lim :input"))
      lastSelectLim = lastCmp.parent().parent();
    else
      lastSelectLim = $("#t_lim tr").last();

    if (name == undefined) {
      $("#asist_lim_ref").val('').data('cmp', null);
      $("#asist_lim_alias").val('L' + ++lastLim);
      $("#asist_lim_cond").val('eq');
      $("#asist_lim_wh").val('wh');
      $("#asist_lim").dialog('open');
      return;
    }

    if (val == undefined) val = "";

    lastSelectLim.after("<tr><td class='alias_lim'>" + name + "</td><td><textarea rows=1 class='i_cmp'>" + val + "</textarea></td></tr>");
    if (val == "") lastSelectLim.next().find("textarea").focus();
  }

  function delLim() {
    if (lastCmp && lastCmp.is("#lim :input") && lastCmp.parent().parent().index() > 0) {
      var ali = lastCmp.parent().prev().text();
      $(".alias_where:contains(" + ali + ")").parent().remove();
      lastCmp.parent().parent().remove();
    }
  }

  $("#lim").on('dblclick', '.alias_lim', function(e) {
    if ($("#campo").is(":focus")) lastCmp = $("#campo");
    if (lastCmp.is("#campo")) {
      var v = lastCmp.val();
      var sel = lastCmp.caret();
      lastCmp.val(v.slice(0, sel.begin) + '@lim[:' + $(this).text() + ']' + v.slice(sel.end));
      lastCmp.focus();
    }
  });

  // Diálogo de fórmulas

  $("#formulas").dialog({
    autoOpen: false,
    width: 600,
    position: {my: "left top", at: "left+100 bottom+150", of: "#bandas"},
    show: {effect: "blind", duration: 300},
    hide: {effect: "explode", duration: 300},
    resizeStop: function() {$(this).dialog('option', 'height', 'auto')}
  });
  $("#b_add_formula").button({icons: {primary: "ui-icon-plus"}, text: false}).click(function(){addFormula();});
  $("#b_del_formula").button({icons: {primary: "ui-icon-minus"}, text: false}).click(function(){delFormula();});

  var lastFormula = 0;
  function addFormula(name, val) {
    if (name == undefined) name = "F" + ++lastFormula;
    if (val == undefined) val = "";

    var elem;
    if (lastCmp && lastCmp.is("#formulas :input"))
      elem = lastCmp.parent().parent();
    else
      elem = $("#t_formulas tr").last();

    elem.after("<tr><td class='alias_formulas'>" + name + "</td><td><textarea rows=1 class='i_cmp admite_campo'>" + val + "</textarea></td></tr>");
    if (val == "") elem.next().find("textarea").focus();
  }

  function delFormula() {
    if (lastCmp && lastCmp.is("#formulas :input")) lastCmp.parent().parent().remove();
  }

  $("#formulas").on('dblclick', '.alias_formulas', function(e) {
    if ($("#campo").is(":focus")) lastCmp = $("#campo");
    if (lastCmp.is("#campo")) {
      var v = lastCmp.val();
      var sel = lastCmp.caret();
      lastCmp.val(v.slice(0, sel.begin) + '@fx[:' + $(this).text() + ']' + v.slice(sel.end));
      lastCmp.focus();
    }
  });

  // Diálogo de select

  $("#select").dialog({
    autoOpen: false,
    width: 400,
    position: {my: "left top", at: "left+10 bottom+10", of: "#bandas"},
    show: {effect: "blind", duration: 300},
    hide: {effect: "explode", duration: 300},
    resizeStop: function() {$(this).dialog('option', 'height', 'auto')}
  });
  $("#b_add_select").button({icons: {primary: "ui-icon-plus"}, text: false}).click(function(){addSelect();});
  $("#b_del_select").button({icons: {primary: "ui-icon-minus"}, text: false}).click(function(){delSelect();});

  var lastSelect = 0;
  function addSelect(name, val) {
    if (name == undefined) name = "S" + ++lastSelect;
    if (val == undefined) val = "";

    var elem;
    if (lastCmp && lastCmp.is("#select :input"))
      elem = lastCmp.parent().parent();
    else
      elem = $("#t_select tr").last();

    elem.after("<tr><td class='alias_select'>" + name + "</td><td><textarea rows=1 class='i_cmp admite_campo'>" + val + "</textarea></td></tr>");
    if (val == "") elem.next().find("textarea").focus();
  }

  function delSelect() {
    if (lastCmp && lastCmp.is("#select :input")) lastCmp.parent().parent().remove();
  }

  $("#select").on('dblclick', '.alias_select', function(e) {
    if (lastCmp.is("#campo")) {
      var v = lastCmp.val();
      var sel = lastCmp.caret();
      lastCmp.val(v.slice(0, sel.begin) + '~' + $(this).text() + '~' + v.slice(sel.end));
      lastCmp.focus();
    }
  });

  // Diálogo de where

  $("#where").dialog({
    autoOpen: false,
    width: 600,
    position: {my: "left top", at: "left+30 bottom+40", of: "#bandas"},
    show: {effect: "blind", duration: 300},
    hide: {effect: "explode", duration: 300},
    resizeStop: function() {$(this).dialog('option', 'height', 'auto')}
  });
  $("#b_add_where").button({icons: {primary: "ui-icon-plus"}, text: false}).click(function(){addWhere();});
  $("#b_del_where").button({icons: {primary: "ui-icon-minus"}, text: false}).click(function(){delWhere();});

  var lastWhere = 0;
  function addWhere(name, val) {
    if (name == undefined) name = "W" + ++lastWhere;
    if (val == undefined) val = "";

    var elem;
    if (lastCmp && lastCmp.is("#where :input"))
      elem = lastCmp.parent().parent();
    else
      elem = $("#t_where tr").last();

    elem.after("<tr><td class='alias_where'>" + name + "</td><td><textarea rows=1 class='i_cmp admite_campo'>" + val + "</textarea></td></tr>");
    if (val == "") elem.next().find("textarea").focus();
  }

  function delWhere() {
    if (lastCmp && lastCmp.is("#where :input")) lastCmp.parent().parent().remove();
  }

  // Diálogo de order

  $("#order").dialog({
    autoOpen: false,
    width: 400,
    position: {my: "left top", at: "left+50 bottom+70", of: "#bandas"},
    show: {effect: "blind", duration: 300},
    hide: {effect: "explode", duration: 300},
    resizeStop: function() {$(this).dialog('option', 'height', 'auto')}
  });

  // Diálogo de group

  $("#group").dialog({
    autoOpen: false,
    width: 400,
    position: {my: "left top", at: "left+70 bottom+100", of: "#bandas"},
    show: {effect: "blind", duration: 300},
    hide: {effect: "explode", duration: 300},
    resizeStop: function() {$(this).dialog('option', 'height', 'auto')}
  });

  // Diálogo de having

  $("#having").dialog({
    autoOpen: false,
    width: 600,
    position: {my: "left top", at: "left+30 bottom+70", of: "#bandas"},
    show: {effect: "blind", duration: 300},
    hide: {effect: "explode", duration: 300},
    resizeStop: function() {$(this).dialog('option', 'height', 'auto')}
  });
  $("#b_add_having").button({icons: {primary: "ui-icon-plus"}, text: false}).click(function(){addHaving();});
  $("#b_del_having").button({icons: {primary: "ui-icon-minus"}, text: false}).click(function(){delHaving();});

  var lastHaving = 0;
  function addHaving(name, val) {
    if (name == undefined) name = "W" + ++lastHaving;
    if (val == undefined) val = "";

    var elem;
    if (lastCmp && lastCmp.is("#having :input"))
      elem = lastCmp.parent().parent();
    else
      elem = $("#t_having tr").last();

    elem.after("<tr><td class='alias_where'>" + name + "</td><td><textarea rows=1 class='i_cmp admite_campo'>" + val + "</textarea></td></tr>");
    if (val == "") elem.next().find("textarea").focus();
  }

  function delHaving() {
    if (lastCmp && lastCmp.is("#having :input")) lastCmp.parent().parent().remove();
  }

  // Diálogo de estilos

  $("#estilos").dialog({
    autoOpen: false,
    width: 650,
    show: {effect: "blind", duration: 500},
    hide: {effect: "explode", duration: 500},
    resizeStop: function() {$(this).dialog('option', 'height', 'auto')}
  });
  $("#t_estilos tbody").sortable({items: "tr:not(.subtit)"});
  $("#b_add_estilo").button({icons: {primary: "ui-icon-plus"}, text: false}).click(function(){addEstilo();});
  $("#b_del_estilo").button({icons: {primary: "ui-icon-minus"}, text: false}).click(function(){delEstilo();});

  function llenaEstilos() {
    est = "";
    $("#t_estilos input").each(function(){
      v = $(this).val();
      if (v.trim() != "") est += '<option value="' + (v == "def" ? "" : v) + '">' + v + '</option>';
    });
    v = $("#estilo").val();
    $("#estilo").html(est);
    $("#estilo").val(v);
  }

  $("#estilos").on("blur", "input", llenaEstilos);

  function addEstilo(name, val) {
    if (name == undefined) name = "";
    if (val == undefined) val = "";

    if (lastCmp && lastCmp.is("#estilos :input"))
      elem = lastCmp.parent().parent();
    else
      elem = $("#t_estilos tr").last();

    elem.after("<tr><td><input class='i_cmp' value='" + name +"'/></td><td><textarea class='i_cmp' rows=1>" + val + "</textarea></td></tr>");
    if (name == "") elem.next().find("input").focus();
  }

  function delEstilo() {
    if (lastCmp && lastCmp.is("#estilos :input") && lastCmp.parent().parent().index() > 1) lastCmp.parent().parent().remove();
    llenaEstilos();
  }

  function checkEstilo(e) {
    a = true;
    $("#t_estilos input").each(function() {
      if ($(this).val() == e) {
        a = false;
        return false;
      }
    });
    if (a) {
      n = e.slice(3);
      c = "0000000000".slice(10-n);
      addEstilo("dec" + n, ":def_d, {format_code: '#,##0." + c + "'}");
      llenaEstilos();
    }
  }

  /**
  $("#estilos").on("click", ":input", function(e){$("#b_del_estilo").button("enable");});
  $("#estilos").on("blur", ":input", function(e){$("#b_del_estilo").button("disable");});
  $("#b_del_estilo").button("disable");
   **/

  // Añadir estilos por defecto
  addEstilo("def", "{sz: 10}");
  addEstilo("def_c", ":def, {alignment: {horizontal: :center}}");
  addEstilo("def_d", ":def, {alignment: {horizontal: :right}}");
  addEstilo("def_n", ":def, {b: true}");
  addEstilo("def_nc", ":def_c, {b: true}");
  addEstilo("def_nd", ":def_d, {b: true}");
  addEstilo("int", ":def_d, {format_code: '#,##0'}");
  addEstilo("int_n", ":def_nd, :int");
  addEstilo("dec2", ":def_d, {format_code: '#,##0.00'}");
  addEstilo("dec2_n", ":def_n, :dec2");
  addEstilo("date", ":def_c, {format_code: 'dd-mm-yyyy'}");
  addEstilo("tit", ":def, {bg_color: '303030'}");
  addEstilo("tit_c", ":def_c, :tit");
  addEstilo("tit_d", ":def_d, :tit");
  addEstilo("borde", ":def, {border: {style: :thin, color: 'FF0000FF', edges: [:right]}}");
  llenaEstilos();

  $( "#grabar" ).dialog({
    autoOpen: false,
    show: {effect: "blind", duration: 500},
    hide: {effect: "explode", duration: 500}
  });

  /*
  $( "#abrir" ).dialog({
    autoOpen: false,
    width: 700,
    height: 700
  });
  */

  function fullCampo(node) {
    node = node || $("#tree_campos").tree('getSelectedNode');
    if (node) {
      label = node.name;
      node = node.parent;
      while (node.name != undefined) {
        label = node.name + '.' + label;
        node = node.parent;
      }
       return(label);
    } else
      return('');
  }

  var celda, nRup = 0, nCol = 2, nCel = 6;

  function bBandaStatus() {
    $(".b_banda").button("enable");
    if (celda.prev().length == 0) $("#swp_w").button("disable");
    if (celda.next().length == 0) $("#swp_e").button("disable");
    if (celda.parent().prev().length == 0) $("#swp_n").button("disable");
    if (celda.parent().next().length == 0) $("#swp_s").button("disable");
    if (nCol == 1) $("#del_c").button("disable");
  }

  function setCell(c) {
    celda = c;
    $(".t_banda td").css("background-color", "#ffffff");
    celda.css("background-color", "#d3d3d3");
    bBandaStatus();
    $("#prop-celdas .i_cmp").attr("disabled", false);
    var prop = celda.data('prop');
    $("#campo").val(prop.campo);
    $("#estilo").val(prop.estilo);
    $("#tipo").val(prop.tipo);
    $("#alias").val(prop.alias);

    $("#campo").focus();
  }

  $("#bandas").on('click', 'td', function() {
    if (window.event.ctrlKey) {
      if (lastCmp.is("#campo")) {
        var ban_click = $(this).parentsUntil('div').last().attr('id');
        var ban_act = celda.parentsUntil('div').last().attr('id');
        var h_click = $(this).data('prop');
        var ali = h_click.alias;
        var v = $("#campo").val();

        var ini;
        if (v == "") {
          ini = true;
          v = "'='+";
        } else
          ini = false;

        if (ban_click == ban_act) {
          if (ban_click == "t_det" && window.event.shiftKey)
            $("#campo").val(v + ' tot(:' + ali + ', 0)');
          else
            $("#campo").val(v + ' cel(:' + ali + ')');
        } else if (ban_click == "t_det") {
          $("#campo").val(v + ' tot(:' + ali + ')');
        } else
          ini = false;

        if (ini) {
          var h = celda.data('prop');
          if (ban_click != ban_act) {
            h.alias = ali;
            $("#alias").val(ali);
            celda.html(ali);
          }
          h.estilo = h_click.estilo;
          $("#estilo").val(h.estilo);
        }

        $("#campo").focus();
      }
    } else
      setCell($(this));
  });

  function noCell() {
    $(".b_banda").button("disable");
    $("#prop-celdas .i_cmp").attr("disabled", true).val('');
  }

  $("#bandas").resizable({handles: 'e'});

  function iniPropCell() {
    $(".cell-new").each(function() {
      $(this).data('prop', {});
    });
    $(".cell-new").removeClass('cell-new');
  }

  function genCell() {
    nCel += 1;
    return('<td class="cell-new">&nbsp;</td>');
  }

  function genCol(ew) {
    var i = celda.index() + 1;
    $(".t_banda td:nth-child(" + i + ")").each(function () {
      (ew == 'w') ? $(this).before(genCell()) : $(this).after(genCell());
    });
    nCol += 1;
    bBandaStatus();
    iniPropCell();
  }

  function genCadRow() {
    cad = '<tr>';
    for (i = 0; i < nCol; i++) {
      cad += genCell();
    }
    cad += '</tr>';

    return cad;
  }

  function genRow(ns) {
    cad = genCadRow();
    (ns == 'n') ? $(celda.parent()).before(cad) : $(celda.parent()).after(cad);
    bBandaStatus();
    iniPropCell();
  }

  function swpCell(cd) {
    var prop = cd.data('prop');
    cd.data('prop', celda.data('prop'));
    celda.data('prop', prop);
    var ht = cd.html();
    cd.html(celda.html());
    celda.html(ht);
    var ti = cd.attr('title');
    cd.attr('title', celda.attr('title'));
    celda.attr('title', ti);
    setCell(cd);
  }

  function banLeft() {
    $("#bandas").css("left", ($("#tree_campos").width() + 10) + "px");
  }

  function redimWindow() {
    var h = $(window).height() - $("#d-titulo").height();
    $("#tree_campos").css("height", h);
  }


  $("#swp_w").button({icons: {primary: "ui-icon-arrowthick-1-w"}, text: false}).click(function(){swpCell(celda.prev());});
  $("#swp_e").button({icons: {primary: "ui-icon-arrowthick-1-e"}, text: false}).click(function(){swpCell(celda.next());});
  $("#swp_n").button({icons: {primary: "ui-icon-arrowthick-1-n"}, text: false}).click(function(){swpCell(celda.parent().prev().children().eq(celda.index()));});
  $("#swp_s").button({icons: {primary: "ui-icon-arrowthick-1-s"}, text: false}).click(function(){swpCell(celda.parent().next().children().eq(celda.index()));});
  $("#add_cw").button({icons: {primary: "ui-icon-triangle-1-w"}, text: false}).click(function(){genCol("w")});
  $("#add_ce").button({icons: {primary: "ui-icon-triangle-1-e"}, text: false}).click(function(){genCol("e")});
  $("#add_rn").button({icons: {primary: "ui-icon-triangle-1-n"}, text: false}).click(function(){genRow("n")});
  $("#add_rs").button({icons: {primary: "ui-icon-triangle-1-s"}, text: false}).click(function(){genRow("s")});
  $("#del_r").button({icons: {primary: "ui-icon-circle-minus"}, text: false}).click(function(){
    celda.parent().remove();
    noCell();
  });
  $("#del_c").button({icons: {primary: "ui-icon-circle-arrow-n"}, text: false, disabled: true}).click(function(){
    var i = celda.index() + 1;
    $(".t_banda td:nth-child(" + i + ")").remove();
    noCell();
    nCol -= 1;
  });
  $("#add_rup").button().click(function() {
    nRup += 1;
    var cl = 'rup_' + nRup;
    $("#tt_det").before(
      '<p class="' + cl + ' tit_band tit ui-widget-header ui-corner-all">Cabecera de Ruptura</p>' +
      '<table id="' + cl + '" class="' + cl + ' t_banda">' +
      genCadRow() +
      '</table>'
    );
    $("#t_det").after(
      '<p class="' + cl + ' tit_band tit ui-widget-header ui-corner-all">Pie de Ruptura</p>' +
      '<table class="' + cl + ' t_banda">' +
      genCadRow() +
      '</table>'
    );

    $("#t_rup tr").last().after(
      '<tr class="' + cl +'">' +
        '<td><textarea rows="1" class="i_cmp admite_campo"></textarea></td>' +
        '<td style="vertical-align: top;text-align: center"><input type="checkbox" class="i_cmp" style="width: auto"/></td>' +
      '</tr>'
    );
    iniPropCell();
    $("#rupturas").dialog("open");
    $("." + cl + " textarea").focus();
  });
  $("#del_rup").button().click(function(){
    var cl = celda.parentsUntil('div').last().attr('class').split(/\s+/);
    $.each(cl, function(i, c) {
      if (c.slice(0,4) == 'rup_') {
        $('.' + c).remove();
        noCell();
        return false;
      }
    });
  });

  // Deshabilitar todos los botones de las bandas (hasta que se seleccione una celda)
  noCell();

  $("#bandas").on('dblclick', 'p', function(e) {
    if ($(this).next().children().children().length == 0) {
      $(this).next().children().html(genCadRow());
      iniPropCell();
    }
  });

  var lastCmp;
  $("body").on("blur", ".i_cmp", function(e){
    lastCmp = $(this);
  });

  $("#prop-celdas .i_cmp").blur(function(e){
    var f = $(this);
    var v = f.val().trim();
    var p = f.attr('id');
    celda.data('prop')[p] = v;
    if (p == 'campo')
      celda.attr('title', v);
    else if (p == 'alias')
      celda.html(v == "" ? "&nbsp;" : v);
  });

  $("#tree_campos")
    .tree({selectable: false, dataUrl: '/gi/campos?node=' + modelo, onCanSelectNode: function(node){
    return node.load_on_demand != undefined ? false : true;
  }})
    .bind('tree.dblclick', function(event) {
      /*
      if (lastCmp && lastCmp.is('textarea') && lastCmp.attr("disabled") != "disabled") {
        v = lastCmp.val();
        if (lastCmp.hasClass("admite_campo")) {
        */
      if (lastCmp && lastCmp.attr("disabled") != "disabled" && lastCmp.hasClass("admite_campo")) {
        var v = lastCmp.val();
        var sel = lastCmp.caret();
        if (lastCmp.is("#asist_lim_ref")) {
          lastCmp.val('~' + fullCampo(event.node) + '~').data("cmp", event.node);
        } else
          lastCmp.val(v.slice(0, sel.begin) + '~' + fullCampo(event.node) + '~' + v.slice(sel.end));

        if (lastCmp.is("#prop-celdas textarea") && $("#alias").val() == "") {
          var a = (event.node.parent.name == undefined) ? "" : $(event.node.table.split('_')).get(-1) + '_';
          var name = a + event.node.name;
          $("#alias").val(name);
          celda.html(name);
          var esti = event.node.estilo;
          if (event.node.type == 'decimal') checkEstilo(esti);
          $("#estilo").val(esti);
          var prop = celda.data('prop');
          prop.alias = name;
          prop.estilo = esti;
          if (celda.is("#t_det td")) {
            var cc = $("#t_cab tr").last().children().eq(celda.index());
            prop = cc.data('prop');
            if (prop.alias == undefined || prop.alias == "") {
              prop.campo = "nt('" + event.node.name + "')";
              prop.alias = name;
              prop.estilo = "tit" + (event.node.ali == "i" ? "" : "_" + event.node.ali);
              cc.attr('title', prop.campo);
              cc.html(name);
            }
          }
        }
        lastCmp.focus();
      }
    }
  )
  .bind('tree.open', banLeft)
  .bind('tree.close', banLeft)
  .bind('tree.init', function(event) {
    banLeft();
    $("#bandas").css("display", "block");
    $("#prop-celdas").dialog("open").dialog("option", "position", {my: "left top", at: "right+8 top", of: "#bandas"});
  });

  /*
  $("body").on('keypress', 'textarea', function(e){
    if (e.which == 10) $(this).val($(this).val() + fullCampo());
  });
  */

  $("document").tooltip();

  $("#prop-celdas").dialog({
    title: 'Propiedades',
    autoOpen: false,
    dialogClass: "no-close",
    resizable: false,
    closeOnEscape: false
  });

  $("#rupturas").dialog({
    title: 'Rupturas',
    width: 500,
    autoOpen: false,
    resizeStop: function() {$(this).dialog('option', 'height', 'auto')}
  });


  iniPropCell();
  $(window).resize(redimWindow);
  redimWindow();
</script>
