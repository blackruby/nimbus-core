<div id="d-titulo">
  &nbsp;&nbsp;Búsqueda <%= @tabla %>
  &nbsp;&nbsp;&nbsp;
  <button class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 30px;width: 30px;min-width: 30px;" onclick="gridExport('xlsx')">
    <i class="material-icons" style="font-size: 22px">archive</i>
  </button>
  <button class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 30px;width: 30px;min-width: 30px;" onclick="gridExport('pdf')">
    <i class="material-icons" style="font-size: 22px">picture_as_pdf</i>
  </button>

  &nbsp;&nbsp;
  <select id="bus-sel" onchange="busSel()">
    <% @sel.each {|k, v| %>
      <optgroup label="<%= k %>">
        <% v.each {|f| %>
          <option value="<%= f %>"><%= f.split('/')[-1][0..-5] %></option>
        <% } %>
      </optgroup>
    <% } %>
  </select>

  &nbsp;&nbsp;&nbsp;
  <button class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" style="margin-bottom: 4px;height: 30px;width: 30px;min-width: 30px;" onclick="busSave()">
    <i class="material-icons" style="font-size: 22px">save</i>
  </button>
</div>
<div id="tree-campos"> </div>
<div id="d-grid"> </div>

<style>
  #d-titulo {
    background-color: #673AB7;
    color: #ffffff;
    height: 40px;
    line-height: 40px;
    font-size: large;
  }
  #tree-campos {
    float: left;
    overflow-x: hidden;
    overflow-y: auto;
    vertical-align: top;
    background-color: #d3d3d3;
    padding-left: 3px;
    padding-right: 5px;
    padding-top: 3px;
    padding-bottom: 10px;
  }
  #d-grid {
    position: absolute;
    top: 40px;
  }

  /*
  .ui-menu-item {
    height: 40px;
  }
  */
</style>

<script>
  var _vista = <%= @vid %>;
</script>

<script>
  var _controlador = 'bus';

  $("#tree-campos").tree({
    selectable: false,
    dataUrl: '/gi/campos?node=<%= @mod %>'
  });

  function gridCols() {
    var gcols = [];
    if (typeof(grid) != "undefined") {
      gcols = grid.jqGrid('getGridParam', 'colModel');
    }

    var cols = {};
    for (var i in gcols) {
      cols[gcols[i].name] = {label: gcols[i].label, w: gcols[i].width, type: gcols[i].type};
    }

    return cols;
  }

  function selCampo(event, modo) {
    if (event.node.load_on_demand != undefined) return;
    z=event.node;

    var name = event.node.name;
    var p = event.node.parent;
    while (p.name != undefined) {
      name = p.name + '.' + name;
      p = p.parent;
    }

    // Calcular los decimales (son el último carácter del estilo)
    if (event.node.estilo == undefined)
      var dec = 0;
    else {
      var dec = parseInt(event.node.estilo.slice(-1));
      if (isNaN(dec)) dec = 0;
    }


    // Construir el vector de columnas
    if (typeof(grid) == "undefined") {
      lastScrollH = 0;
      lastScrollV = 0;
      lastPage = 1;
    } else {
      lastScrollH = $("#d-grid .ui-jqgrid-bdiv").scrollLeft();
      lastScrollV = $("#d-grid .ui-jqgrid-bdiv").scrollTop();
      lastPage = grid.jqGrid('getGridParam', 'page');
    }

    callFonServer("nueva_col", {dat: JSON.stringify({col: name, modo: modo, type: event.node.type, dec: dec, cols: gridCols()})});
  }

  $('#tree-campos')
    .bind('tree.click', function(event) {selCampo(event, 'add')})
    .bind('tree.contextmenu', function(event) {selCampo(event, 'del')})
    .bind('tree.open', gridLeft)
    .bind('tree.close', gridLeft);

  function generaGrid(colMod, sortname, sortorder, postdata, onload, keepScrollH, keepScrollV) {
    $('#d-grid').html('');
    $("#d-grid").append("<table id='grid'></table>");
    grid = $("#grid");
    //var toolgrid = '#grid_toppager';

    var vgrid = grid.jqGrid({
      colModel: colMod,
      sortname: sortname,
      sortorder: sortorder,
      postData: postdata,
      page: (keepScrollV ? lastPage : 1),
      url: '/bus/list?vista=' + _vista,
      datatype: "json",
      mtype: 'POST',
      rowNum: 100,

      gridview: true,

      toppager: true,
      scroll: false,

      rowList: [100, 500, 1000],
      altRows: true,	// filas tipo cebra
      sortable: true,	// Si las columnas se pueden reordenar (cambiar de sitio)
      viewrecords: true,	// Muestra información del total de registros en la toolbar

      ondblClickRow: gridSelect,

      shrinkToFit: false,
      multiSort: true,
      loadComplete: function() {
        $("#d-grid .ui-jqgrid-bdiv").scrollLeft(keepScrollH ? lastScrollH : 90000).scrollTop(keepScrollV ? lastScrollV : 0);
        eval(onload);
      }
    });

    //grid.jqGrid('gridResize', {handles: "s,e", minHeight: 80});
    grid.jqGrid('bindKeys');
    grid.jqGrid('filterToolbar', {stringResult: true, searchOperators: true});
    //vgrid[0].toggleToolbar();

    $(".ui-pg-input").height(14); // Para que salga de la altura correcta el input del número de página del grid

    gridLeft();
    gridDim();

    //$("#grid").jqGrid('setGridParam', {url: '/bus/list?vista=' + _vista, datatype: 'json', mtype: 'POST', postData: {filters: '{"groupOp":"AND","rules":[{"field":"anunciantes.codigo","op":"cn","data":"000"}]}'}})
    //grid.trigger('reloadGrid')

    /**
    $(".ui-search-input").on("change", "input", function(e) {
      var gsi = $(this);
      z = $(this);
      console.log('Cambio');
      //setTimeout(function(){gsi.val('')}, 100);
    });
     **/
  }

  function gridSelect() {
    id = grid.jqGrid("getGridParam","selrow");
    if (id != null) {
      _autoCompField.attr("dbid", id);
      callFonServer("bus_value", {id: id});
      window.opener.send_validar(_autoCompField, id)
    } else
      alert("Seleccione un registro");
  }

  function gridLeft() {
    $("#d-grid").css("left", ($("#tree-campos").width() + 8) + "px");
  }

  function gridDim() {
    if (typeof(grid) == "undefined") return;
    var w = $(window).width() - $("#tree-campos").width() - 12;
    var h = $(window).height() - $("#d-titulo").height() - 77;
    grid.setGridWidth(w);
    grid.setGridHeight(h);
  }

  function redimWindow() {
    var h = $(window).height() - $("#d-titulo").height();
    $("#tree-campos").css("height", h);
    gridDim();
  }

  function gridExport(tipo) {
    callFonServer("bus_export", {tipo: tipo});
  }

  function busSave() {
    var fic = prompt('Nombre del archivo: ');
    if (fic) callFonServer("bus_save", {fic: fic, dat: JSON.stringify({cols: gridCols()})});
  }

  function busSel() {
    callFonServer("bus_sel", {fic: $("#bus-sel").val()});
  }

  $(window).resize(redimWindow);

  redimWindow();

  $(window).unload(function() {
    callFonServer("bus_bye", {});
  });

  $("body").on("click", ".clearsearchclass", function(e) {
    var gsi = $(this).parent().prev().find('input');
    setTimeout(function(){gsi.val('')}, 100);
  });
</script>

<script>
  $(window).load(function() {
    <%= @ajax.html_safe %>
  });
</script>
