<!DOCTYPE html>
<html>
<head>
  <meta name="mobile-web-app-capable" content="yes">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= @titulo.nil? ? 'Nimbus' : @titulo %></title>
  <%= stylesheet_link_tag    "application", media: "all", "data-turbolinks-track" => true %>
  <%= javascript_include_tag "application", "data-turbolinks-track" => true %>
  <%= csrf_meta_tags %>
</head>

<body>
<%= yield :before %>

<div class="mdl-layout mdl-js-layout mdl-layout--fixed-header">
<header class="mdl-layout__header">
  <div class="mdl-layout__header-row">
    <span class="mdl-layout-title grid-title"> <%= @titulo %> </span>
    <label class="mdl-button mdl-js-button mdl-button--icon" id="_pk-label" onclick="pkSearch()">
      <i class="material-icons">search</i>
    </label>
    <input id="_pk-input" style="margin-left: 5px" />
    <div class="mdl-layout-spacer"></div>
    <nav class="mdl-navigation">
      <button class="nim-hbut mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" onclick="searchBar()">
        <i class="material-icons">visibility</i>
      </button>
      &nbsp; &nbsp;
      <button class="nim-hbut mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" onclick="editInForm()">
        <i class="material-icons">edit</i>
      </button>
      &nbsp; &nbsp;
      <button class="nim-hbut mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" onclick="newFicha()">
        <i class="material-icons">add</i>
      </button>
      &nbsp; &nbsp;
      <button class="nim-hbut mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" onclick="mantGrabarGrid()">
        <i class="material-icons">save</i>
      </button>
      &nbsp; &nbsp;
      <button class="nim-hbut mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored" onclick="mantBorrarGrid()">
        <i class="material-icons">delete</i>
      </button>
      &nbsp; &nbsp; &nbsp; &nbsp;
      <button id="b-collapse" class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect mdl-button--colored">
        <i class="material-icons">swap_vert</i>
      </button>
      <button id="menu-r" class="nim-hbut-f mdl-button mdl-js-button mdl-button--icon">
        <i class="material-icons">more_vert</i>
      </button>
      <ul class="mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect" for="menu-r">
        <li class="mdl-menu__item" onclick="searchBar()"> <i class="material-icons">visibility</i> Buscar </li>
        <li class="mdl-menu__item" onclick="editInForm()"> <i class="material-icons">edit</i> Editar </li>
        <li class="mdl-menu__item" onclick="newFicha()"> <i class="material-icons">add</i> Nueva </li>
        <li class="mdl-menu__item" onclick="mantGrabarGrid()"> <i class="material-icons">save</i> Grabar </li>
        <li class="mdl-menu__item" onclick="mantBorrarGrid()"> <i class="material-icons">delete</i> Eliminar </li>
      </ul>
    </nav>
  </div>
</header>
  <div class="mdl-layout__drawer">
    <nav class="mdl-navigation">
      <a class="mdl-navigation__link" href="#">Histórico</a>
      <a class="mdl-navigation__link" href="#">Estadísticas</a>
    </nav>
  </div>

<main class="mdl-layout__content">
  <div class="page-content">
    <div class="mdl-grid">
      <%=
         gr = '<div id="cell-grid" class="mdl-cell'
         fi = '<div id="cell-ficha" class="mdl-cell'
         c = @view[:grid][:gcols][0]
         gr << ' mdl-cell--' + c.to_s + '-col'
         fi << ' mdl-cell--' + (c >= 12 ? 12 : 12-c).to_s + '-col'
         c = @view[:grid][:gcols][1]
         gr << ' mdl-cell--' + c.to_s + '-col-tablet'
         fi << ' mdl-cell--' + (c >= 8 ? 8 : 8-c).to_s + '-col-tablet'
         c = @view[:grid][:gcols][2]
         gr << ' mdl-cell--' + c.to_s + '-col-phone'
         fi << ' mdl-cell--' + (c >= 4 ? 4 : 4-c).to_s + '-col-phone'
         gr << '"><table id="grid"></table></div>'
         fi << '"><iframe id="ficha" class="ficha"> </iframe></div>'

         ((@view[:grid][:ew] == :w) ? gr + fi : fi + gr).html_safe
      %>
    </div>
  </div>
</main>

<%= yield %>
</div>

<style>
  /*
  #ficha {
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),
    0 3px 1px -2px rgba(0, 0, 0, 0.2),
    0 1px 2px 0 rgba(0, 0, 0, 0.12);
  }
  */
  .ui-search-menu {z-index: 1500};
  .mdl-cell {margin: 1px;}
  .mdl-grid {padding: 0;}
  .mdl-layout__content::-webkit-scrollbar {display: none;}

  @media screen and (min-width: 600px) {
    .nim-hbut-f {
      display: none;
    }
  }
  @media screen and (max-width: 600px) {
    .nim-hbut {
      display: none;
    }
  }

  #_pk-input {
    display: none;
    background-color: #D1C4E9;
    border-radius: 10px;
    width: 15em;
  }
  #_pk-input:focus {
    display: block;
  }
</style>

<script>
	grid = $("#grid");
	toolgrid = '#grid_toppager';

	var vgrid = grid.jqGrid({
    colModel: <%= raw @view[:col_model] %>,
    //caption: '<%= @titulo %>',
    sortname: <%= raw @view[:orden_grid][:campo] %>,
    sortorder: '<%= @view[:orden_grid][:sentido] %>',
    url:'<%= @view[:url_list].html_safe %>',
    cellurl:'<%= @view[:url_cell].html_safe %>',
    beforeProcessing: jqg_before_processing,
    beforeEditCell: jqg_before_edit_cell,
    beforeEditCell: jqg_before_edit_cell,
    beforeSubmitCell: jqg_before_submit_cell,
    afterSubmitCell: jqg_after_submit_cell,
    afterSaveCell: jqg_after_save_cell,
    datatype: "json",
    mtype: 'POST',

		height: <%= @view[:grid][:height] %>,
    //width: 500,
    //autowidth: true,
		rowNum: <%= @view[:grid][:rowNum] %>,

		cellEdit: <%= @view[:grid][:cellEdit] %>,
		gridview: true,	// Acelera la velocidad de renderizado. Poner a false con trees y subgrids

    //toppager: true,
		rowList:[10,20,30,50,100,500,1000],
		altRows: true,	// filas tipo cebra
		sortable: true,	// Si las columnas se pueden reordenar (cambiar de sitio)
		viewrecords: true,	// Muestra información del total de registros en la toolbar

		ondblClickRow: editInForm,

    shrinkToFit: <%= @view[:grid][:shrinkToFit] %>,
		multiSort: <%= @view[:grid][:multiSort] %>,
		//multiselect: true,
		//rownumbers: true,
		scroll: <%= @view[:grid][:scroll] %>,
	});

	grid.jqGrid('gridResize', {handles: "s", minHeight: 80});
	grid.jqGrid('navGrid', toolgrid, {edit: false, add: false, del: true}, {}, {}, {}, {multipleSearch: true, multipleGroup: true, showQuery: true});
	grid.jqGrid('filterToolbar', {stringResult: true, searchOperators: true}); vgrid[0].toggleToolbar();
	grid.jqGrid('bindKeys');

	grid.jqGrid('navButtonAdd', toolgrid, {caption:"",title:"Barra de búsqueda", buttonicon :'ui-icon-pin-s', onClickButton:function(){vgrid[0].toggleToolbar()}});
	grid.jqGrid('navButtonAdd', toolgrid, {caption:"",title:"Formulario", buttonicon :'ui-icon-carat-2-n-s', onClickButton: editInForm});
	grid.jqGrid('navButtonAdd', toolgrid, {caption:"",title:"Nueva Alta", buttonicon :'ui-icon-plus', onClickButton: newFicha});

  function editInLine() {
    id = grid.jqGrid('getGridParam','selrow');
    if (id != null)
      grid.jqGrid('editRow', id, true);
    else
      alert("Seleccione un registro");
  }

  function searchBar() {vgrid[0].toggleToolbar();}

  function editInForm() {
    id = grid.jqGrid('getGridParam','selrow');
    if (id != null) {
      $("#ficha").attr('src', '<%= @view[:url_base] %>' + id + '/edit' + '<%= @view[:arg_edit] %>');
      $("#dialog").dialog("open");
    } else
      alert("Seleccione un registro");
  }

  function newFicha() {
    $("#ficha").attr('src', '<%= @view[:url_new] %>');
    $("#dialog").dialog("open");
  }

/*
  $("#ficha").load(function() {
    h = this.contentWindow._altura;
    if (h == undefined) h = this.contentWindow.document.body.offsetHeight + 100 + 'px';
    $(this).parent().css("height", h);
     w = this.contentWindow._anchura;
     if (w == undefined) w = "400px"
     $(this).parent().css("width", w);
    //$(this).css("height", $("#ficha").contents().find('.mdl-layout__content')[0].scrollHeight + 130 + "px");
  });
*/

  function grid_reload() {
    grid.trigger('reloadGrid', [{current:true}]);
  }

  // Mostrar/Ocultar el grid

  var classFicha, displayGrid = true;

  $("#b-collapse").click(function () {
    if (displayGrid) {
      $("#cell-grid").css('display', 'none');
      classFicha = $("#cell-ficha").attr('class');
      $("#cell-ficha").attr('class', 'mdl-cell mdl-cell--8-col-tablet mdl-cell--4-col-phone mdl-cell--12-col');
      displayGrid = false;
    } else {
      $("#cell-grid").css('display', 'block');
      $("#cell-ficha").attr('class', classFicha);
      displayGrid = true;
      $("#ficha").height(0);
    }
    redimWindow();
  });


  // Recalcular la anchura y altura del grid cuando se redimensione la ventana

  //$("#ficha").css("height", $(window).height() - $("#ficha").offset().top - 40);
  function redimWindow() {
    tf = $("#cell-ficha").offset().top;
    if (displayGrid) {
      grid.setGridWidth($("#gbox_grid").parent().width()-2, grid.jqGrid('getGridParam', 'shrinkToFit'));
      tg = $("#cell-grid").offset().top;
      if (tg == tf) {
        h = $(window).height() - tf - 35;
        $("#ficha").css("height", h);
        grid.setGridHeight(h);
        $("#gbox_grid").css("height", 'auto');
      } else {
        h = $(window).height() / 2;
        if ($("#cell-grid").height() > h) {
          grid.setGridHeight(h);
          $("#gbox_grid").css("height", 'auto');
        }
        $("#ficha").css("height", $(window).height() - (tg>tf ? tf : 40) - $("#cell-grid").height() - 40);
      }
    } else {
      $("#ficha").css("height", $(window).height() - tf - 10);
    }
  }

  function mantGrabarGrid() {
    $("#ficha")[0].contentWindow.mant_grabar();
  }

  function mantBorrarGrid() {
    $("#ficha")[0].contentWindow.mant_borrar();
  }

  function pkSearch() {
    $(".mdl-navigation").css('display', 'none');
    if ($(window).width() <= 600) $(".grid-title").css('display', 'none');
    $("#_pk-label").css('display', 'none');
    $("#_pk-input").css('display', 'block').val('').focus();
  }

  function pkBlur() {
    $("#_pk-input").css('display', 'none');
    $(".grid-title").css('display', 'block');
    $("#_pk-label").css('display', 'block');
    $(".mdl-navigation").css('display', 'flex');
  }

  $("#_pk-input" ).blur(pkBlur).autocomplete({
    source: "/application/auto?mod=<%= @view[:model] %>",
    minLength: 1,
    select: function(e, ui){
      $("#ficha").attr('src', '<%= @view[:url_base] %>' + ui.item.id + '/edit' + '<%= @view[:arg_edit] %>');
      pkBlur();
    },
    //change: function(e, ui){vali_auto_comp(ui, $(this));},
    //response: function(e, ui){auto_comp_error(e, ui);}
  });

  $(window).resize(redimWindow);

  redimWindow();
  $("#ficha").attr('src', '<%= @view[:url_base] %>0/edit?head=0');
</script>

<%= yield :after %>

</body>
</html>
